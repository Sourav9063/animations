{
  "jsx": "import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport styles from \"./svg-animation.module.css\";\n\nconst nameAnime = ({ paths, isHover }) => {\n  const duration = 1500;\n  const delay = duration / ((paths.length + 1) / 2);\n  for (let i = 0; i < paths.length; i++) {\n    paths[i].animate(\n      {\n        strokeDashoffset:\n          paths[i].getTotalLength() -\n          paths[i].getTotalLength() * (isHover ? 3 : 1),\n      },\n      {\n        duration: duration,\n        fill: \"forwards\",\n        easing: \"ease\",\n        delay: delay * i,\n      }\n    );\n  }\n};\n\nexport default function SBH() {\n  const svgRef = useRef(null);\n  const pathsRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const nameAnimInit = () => {\n      const tmpPaths = [...svgRef.current.children].filter(\n        (path) => path.localName === \"path\"\n      );\n      for (let path of tmpPaths) {\n        path.style.strokeDasharray = path.getTotalLength();\n      }\n      pathsRef.current = tmpPaths;\n    };\n\n    nameAnimInit();\n\n    return () => {};\n  }, []);\n\n  return (\n    <svg\n      className={`${styles[\"svg\"]} ${styles[\"\"]} `}\n      viewBox=\"0 0 104 122\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      ref={svgRef}\n      onMouseEnter={() => {\n        nameAnime({ paths: pathsRef.current, isHover: true });\n      }}\n      onMouseLeave={() => {\n        nameAnime({ paths: pathsRef.current, isHover: false });\n      }}\n    >\n      <path d=\"M51.9989 2C46.9004 2 42.7674 6.14776 42.7674 11.2641C42.7674 16.3805 46.9004 20.5283 51.9989 20.5283C57.0974 20.5283 61.2304 16.3805 61.2304 11.2641C61.2304 6.14776 57.0974 2 51.9989 2Z\" />\n      <path d=\"M47.6416 29.7144H20.1188V39.2974H29.1785L29.1798 48.1911L15.7614 48.1917C13.1621 48.1917 11.0597 50.3396 11.0597 52.9832C11.0597 55.6269 13.1621 57.7747 15.7614 57.7747L29.1798 57.7735L29.1785 85.1444H20.1188V94.7275H47.6416V85.1444H38.5831L38.582 67.0117H47.298V71.4586C47.298 74.1022 49.4004 76.2501 51.9997 76.2501C54.599 76.2501 56.7014 74.1022 56.7014 71.4586L56.702 67.0117H65.418L65.4168 85.1444H56.3584V94.7275H83.8812V85.1444H74.8202V39.2974H83.8812V29.7144H56.3584V39.2974H65.418L65.4168 57.4288H56.702L56.7014 52.9832C56.7014 50.3396 54.599 48.1917 51.9997 48.1917C49.4004 48.1917 47.298 50.3396 47.298 52.9832V57.4288H38.5831V39.2974H47.6416V29.7144Z\" />\n      <path d=\"M97.2983 48.1917H83.5369V57.7747H97.2983C99.8976 57.7747 102 55.6269 102 52.9832C102 50.3396 99.8976 48.1917 97.2983 48.1917Z\" />\n      <path d=\"M15.7614 66.6672H2V76.2501H15.7614C18.3607 76.2501 20.4631 74.1022 20.4631 71.4586C20.4631 68.815 18.3607 66.6672 15.7614 66.6672Z\" />\n      <path d=\"M97.2983 66.6672H83.5369V76.2501H97.2983C99.8976 76.2501 102 74.1022 102 71.4586C102 68.815 99.8976 66.6672 97.2983 66.6672Z\" />\n      <path d=\"M51.9997 118L60.1408 103.621H43.8586L51.9997 118Z\" />\n    </svg>\n  );\n}\n\n\n",
  "css": ".svg {\n  height: 300px;\n  width: 300px;\n}\n\n.svg > path {\n  stroke: white;\n  stroke-width: 3px;\n}\n\n.svg path:nth-child(1) {\n  stroke: green;\n}\n\n.svg path:nth-child(3) {\n  stroke: blue;\n}\n.svg path:nth-child(4) {\n  stroke: red;\n}\n\n.svg path:nth-child(5) {\n  stroke: blue;\n}\n.svg path:nth-child(6) {\n  stroke: blue;\n}\n"
}
